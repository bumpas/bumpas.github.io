---
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import Cta from "@/layouts/components/Cta.astro";
import Pagination from "@/layouts/components/Pagination.astro";
import Post from "@/layouts/partials/Post.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import { sortByDate } from "@/lib/utils/sortFunctions";
import { markdownify } from "@/lib/utils/textConverter";
import { Image } from "astro:assets";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

const homepage = (await getEntry(
  "homepage",
  "-index"
)) as CollectionEntry<"homepage">;

export async function getStaticPaths() {
  const posts = await getSinglePage("posts");
  const totalPages = Math.ceil(posts.length / config.settings.pagination);
  const paths = [];

  for (let i = 1; i < totalPages; i++) {
    paths.push({
      params: {
        slug: (i + 1).toString(),
      },
    });
  }
  return paths;
}
const { banner, call_to_action } = homepage.data;
const { slug } = Astro.params;
const posts = await getSinglePage("posts");
const sortedPosts = sortByDate(posts);
const totalPages = Math.ceil(posts.length / config.settings.pagination);
const currentPage = slug && !isNaN(Number(slug)) ? Number(slug) : 1;
const indexOfLastPost = currentPage * config.settings.pagination;
const indexOfFirstPost = indexOfLastPost - config.settings.pagination;
const currentPosts = sortedPosts.slice(indexOfFirstPost, indexOfLastPost);
---

<Base>
  <section class="section">
    <div class="container">
      <div class="row">
        <div class="mx-auto px-0 lg:col-8">
          
            {currentPosts.map((post) => <Post post={post} />)}
            <Pagination totalPages={totalPages} currentPage={currentPage} />
          
        </div>
      </div>
    </div>
  </section>

  <!-- <Cta cta={call_to_action} /> -->
</Base>
